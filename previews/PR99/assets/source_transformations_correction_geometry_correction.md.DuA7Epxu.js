import{_ as s,c as i,o as e,a7 as a}from"./chunks/framework.DrCl0c2S.js";const g=JSON.parse('{"title":"Geometry Corrections","description":"","frontmatter":{},"headers":[],"relativePath":"source/transformations/correction/geometry_correction.md","filePath":"source/transformations/correction/geometry_correction.md","lastUpdated":null}'),t={name:"source/transformations/correction/geometry_correction.md"},n=a(`<h1 id="Geometry-Corrections" tabindex="-1">Geometry Corrections <a class="header-anchor" href="#Geometry-Corrections" aria-label="Permalink to &quot;Geometry Corrections {#Geometry-Corrections}&quot;">​</a></h1><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fix</span></span></code></pre></div><p>This file simply defines the <code>GeometryCorrection</code> abstract type, and the interface that any <code>GeometryCorrection</code> must implement.</p><p>A geometry correction is a transformation that is applied to a geometry to correct it in some way.</p><p>For example, a <code>ClosedRing</code> correction might be applied to a <code>Polygon</code> to ensure that its exterior ring is closed.</p><h2 id="Interface" tabindex="-1">Interface <a class="header-anchor" href="#Interface" aria-label="Permalink to &quot;Interface {#Interface}&quot;">​</a></h2><p>All <code>GeometryCorrection</code>s are callable structs which, when called, apply the correction to the given geometry, and return either a copy or the original geometry (if nothing needed to be corrected).</p><p>See below for the full interface specification.</p><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="GeometryOps.GeometryCorrection-source-transformations-correction-geometry_correction" href="#GeometryOps.GeometryCorrection-source-transformations-correction-geometry_correction">#</a> <b><u>GeometryOps.GeometryCorrection</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GeometryCorrection</span></span></code></pre></div><p>This abstract type represents a geometry correction.</p><p><strong>Interface</strong></p><p>Any <code>GeometryCorrection</code> must implement two functions: * <code>application_level(::GeometryCorrection)::AbstractGeometryTrait</code>: This function should return the <code>GeoInterface</code> trait that the correction is intended to be applied to, like <code>PointTrait</code> or <code>LineStringTrait</code> or <code>PolygonTrait</code>. * <code>(::GeometryCorrection)(::AbstractGeometryTrait, geometry)::(some_geometry)</code>: This function should apply the correction to the given geometry, and return a new geometry.</p><p><a href="https://github.com/asinghvi17/GeometryOps.jl/blob/f604277d36a5e4a57f5fa12caaa1e2721b3a8be8/src/transformations/correction/geometry_correction.jl#L28-L38" target="_blank" rel="noreferrer">source</a></p></div><br><p>Any geometry correction must implement the interface as given above.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    abstract type GeometryCorrection</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">This abstract type represents a geometry correction.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"># Interface</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Any \`GeometryCorrection\` must implement two functions:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    * \`application_level(::GeometryCorrection)::AbstractGeometryTrait\`: This function should return the \`GeoInterface\` trait that the correction is intended to be applied to, like \`PointTrait\` or \`LineStringTrait\` or \`PolygonTrait\`.</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    * \`(::GeometryCorrection)(::AbstractGeometryTrait, geometry)::(some_geometry)\`: This function should apply the correction to the given geometry, and return a new geometry.</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GeometryCorrection </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">application_level</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(gc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">GeometryCorrection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Not implemented yet for </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$(gc)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(gc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">GeometryCorrection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)(geometry) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> gc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(GI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">trait</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(geometry), geometry)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(gc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">GeometryCorrection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)(trait</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">GI.AbstractGeometryTrait</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, geometry) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Not implemented yet for </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$(gc)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> and </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$(trait)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(geometry) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> fix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(GI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">trait</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(geometry), geometry)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> fix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(trait</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Trait</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, geometry; corrections </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GeometryCorrection[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ClosedRing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),], kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Trait </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> GI.AbstractGeometryTrait</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    traits </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> TraitTarget</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">application_level</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.(corrections))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    final_geometry </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> geometry</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> correction </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> corrections</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> trait </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> TraitTarget</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">application_level</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(corrections))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            final_geometry </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> apply</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> final_geometry</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>The API application_level exists, so from that we need to derive, given a geometry with a trait, which corrections we can apply to it. We can do this by running through all subtypes (recursively) of</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> _get_subtypes!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(vec</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vector{DataType}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> isabstracttype</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(type)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> subtype </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> subtypes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(type)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            _get_subtypes!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(vec, subtype)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    else</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # is a concrete type</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        push!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(vec, type)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> _get_subtypes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    v </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Vector{DataType}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    _get_subtypes!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(v, type)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><h2 id="Available-corrections" tabindex="-1">Available corrections <a class="header-anchor" href="#Available-corrections" aria-label="Permalink to &quot;Available corrections {#Available-corrections}&quot;">​</a></h2><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="GeometryOps.ClosedRing-source-transformations-correction-geometry_correction" href="#GeometryOps.ClosedRing-source-transformations-correction-geometry_correction">#</a> <b><u>GeometryOps.ClosedRing</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ClosedRing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> GeometryCorrection</span></span></code></pre></div><p>This correction ensures that a polygon&#39;s exterior and interior rings are closed.</p><p>It can be called on any geometry correction as usual.</p><p>See also <a href="/GeometryOps.jl/previews/PR99/api#GeometryOps.GeometryCorrection"><code>GeometryCorrection</code></a>.</p><p><a href="https://github.com/asinghvi17/GeometryOps.jl/blob/f604277d36a5e4a57f5fa12caaa1e2721b3a8be8/src/transformations/correction/closed_ring.jl#L38-L46" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="GeometryOps.GEOSCorrection-source-transformations-correction-geometry_correction" href="#GeometryOps.GEOSCorrection-source-transformations-correction-geometry_correction">#</a> <b><u>GeometryOps.GEOSCorrection</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">GEOSCorrection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> GeometryCorrection</span></span></code></pre></div><p>This correction runs <code>LibGEOS.makeValid</code> on the highest level of each geometry available.</p><p>See also <a href="/GeometryOps.jl/previews/PR99/api#GeometryOps.GeometryCorrection"><code>GeometryCorrection</code></a>.</p><p><a href="https://github.com/asinghvi17/GeometryOps.jl/blob/f604277d36a5e4a57f5fa12caaa1e2721b3a8be8/src/transformations/correction/geos.jl#L12-L18" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="GeometryOps.GeometryCorrection-source-transformations-correction-geometry_correction-2" href="#GeometryOps.GeometryCorrection-source-transformations-correction-geometry_correction-2">#</a> <b><u>GeometryOps.GeometryCorrection</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GeometryCorrection</span></span></code></pre></div><p>This abstract type represents a geometry correction.</p><p><strong>Interface</strong></p><p>Any <code>GeometryCorrection</code> must implement two functions: * <code>application_level(::GeometryCorrection)::AbstractGeometryTrait</code>: This function should return the <code>GeoInterface</code> trait that the correction is intended to be applied to, like <code>PointTrait</code> or <code>LineStringTrait</code> or <code>PolygonTrait</code>. * <code>(::GeometryCorrection)(::AbstractGeometryTrait, geometry)::(some_geometry)</code>: This function should apply the correction to the given geometry, and return a new geometry.</p><p><a href="https://github.com/asinghvi17/GeometryOps.jl/blob/f604277d36a5e4a57f5fa12caaa1e2721b3a8be8/src/transformations/correction/geometry_correction.jl#L28-L38" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="GeometryOps.RingOrientation-source-transformations-correction-geometry_correction" href="#GeometryOps.RingOrientation-source-transformations-correction-geometry_correction">#</a> <b><u>GeometryOps.RingOrientation</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RingOrientation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> GeometryCorrection</span></span></code></pre></div><p>This correction ensures that a polygon&#39;s exterior ring is oriented clockwise, and its interior rings are all oriented</p><p>It can be called on any geometry correction as usual.</p><p>See also <a href="/GeometryOps.jl/previews/PR99/api#GeometryOps.GeometryCorrection"><code>GeometryCorrection</code></a>.</p><p><a href="https://github.com/asinghvi17/GeometryOps.jl/blob/f604277d36a5e4a57f5fa12caaa1e2721b3a8be8/src/transformations/correction/ring_orientation.jl#L9-L17" target="_blank" rel="noreferrer">source</a></p></div><br><p>Old code:</p><p>This code was meant to batch corrections across multiple geometries. However, this fails when it encounters things like TraitTargets across multiple levels.</p><hr><p><em>This page was generated using <a href="https://github.com/fredrikekre/Literate.jl" target="_blank" rel="noreferrer">Literate.jl</a>.</em></p>`,27),r=[n];function o(l,p,h,k,c,d){return e(),i("div",null,r)}const E=s(t,[["render",o]]);export{g as __pageData,E as default};
